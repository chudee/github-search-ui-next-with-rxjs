{"version":3,"file":"static/webpack/static/development/pages/index.js.9c6a8513d96e470b65e7.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import React, { Component, createRef } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { fromEvent } from 'rxjs';\nimport { map, mergeMap, debounceTime, filter, distinctUntilChanged } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax';\n\nconst styles = (theme) => ({\n  root: {\n    ...theme.mixins.gutters(),\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    width: 400,\n    margin: '16px auto 0 auto',\n    color: theme.palette.text.secondary,\n  },\n  search: {\n    textAlign: 'center',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n  list: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n  progress: {\n    margin: `${theme.spacing.unit * 2 }px auto`,\n  },\n});\n\nclass Index extends Component<any> {\n  searchRef = createRef();\n  user$;\n  state = {\n    userList: []\n  };\n\n  componentDidMount() {\n    console.log(this.searchRef.current);\n    this.user$ = fromEvent(this.searchRef.current as any, 'keyup').pipe(\n      debounceTime(300),\n      map((event: React.ChangeEvent<HTMLInputElement>) => event.target.value),\n      distinctUntilChanged(),\n      filter((query: string) => query.trim().length > 0),\n      mergeMap((query: string) => ajax.getJSON(`https://api.github.com/search/users?q=${query}`)),\n    );\n    console.log(this.user$);\n    this.user$.subscribe(v => {\n      this.setState({\n        userList: this.drawLayer(v.items)\n      })\n    //   this.test = this.drawLayer(v.items);\n    })\n  }\n\n  componentWillUnmount() {\n    this.user$.unsubscribe();\n  }\n\n  drawLayer = (items) => {\n    const classes = styles(this.props.pageContext.theme);\n\n    return items.map(user => (\n      <ListItem alignItems='flex-start'>\n        <ListItemAvatar>\n          <Avatar alt='Remy Sharp' src={user.avatar_url} />\n        </ListItemAvatar>\n        <ListItemText\n          primary='Oui Oui'\n          secondary={\n            <Typography component='span' style={classes.inline} color='textPrimary'>\n              {user.login}\n            </Typography>\n          }\n        />\n      </ListItem>\n    ));\n  };\n\n  render() {\n    const classes = styles(this.props.pageContext.theme);\n\n    return (\n      <Paper style={classes.root} elevation={1}>\n        <Grid container>\n          <Grid item xs={12} style={classes.search}>\n            <InputBase\n              inputRef={this.searchRef}\n              style={classes.input}\n              placeholder='Search Github User Profile'\n            />\n            <IconButton style={classes.iconButton} aria-label='Search'>\n              <SearchIcon />\n            </IconButton>\n          </Grid>\n          <Grid item xs={12}>\n            <List style={classes.list}>\n          {this.state.userList.length > 0 ?\n            (\n              <Grid item xs={12}>\n                <List style={classes.list}>\n                  {this.state.userList}\n                </List>\n              </Grid>\n            ) : (\n                <Typography>\n                no User\n                </Typography>\n            )\n          }\n            <CircularProgress style={classes.progress}/>\n            </List>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAlCA;AAAA;AACA;AAsCA;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AADA;AACA;AAyBA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAeA;AACA;;;;;;AAzCA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;;;AAEA;AACA;AACA;;;AAsBA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAtFA;AACA;AAwFA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/index.js.f3dffe8fb79aae89c7ed.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import React, { Component, createRef } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { fromEvent } from 'rxjs';\nimport { map, mergeMap, debounceTime, filter, distinctUntilChanged, tap, partition } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax';\n\nconst styles = (theme) => ({\n  root: {\n    ...theme.mixins.gutters(),\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    width: 400,\n    margin: '16px auto 0 auto',\n    color: theme.palette.text.secondary,\n  },\n  search: {\n    textAlign: 'center',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n  list: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  progress: {\n    margin: `${theme.spacing.unit * 2 }px auto`,\n  },\n});\n\nclass Index extends Component<any> {\n  searchRef = createRef();\n  keyup$;\n  user$;\n  reset$;\n  state = {\n    isLoading: false,\n    userList: []\n  };\n\n  componentDidMount() {\n    // search input event handler\n    this.keyup$ = fromEvent(this.searchRef.current as any, 'keyup')\n      .pipe(\n        debounceTime(300),\n        map((event: React.ChangeEvent<HTMLInputElement>) => event.target.value),\n        distinctUntilChanged(),\n      );\n    let [user$, reset$] = this.keyup$\n      .pipe(\n        partition((query: string) => query.trim().length > 0),\n      );\n    // should return json data after api call\n    this.user$ = user$\n      .pipe(\n        // filter((query: string) => query.trim().length > 0),\n        tap(this.showLoading),\n        mergeMap((query: string) => ajax.getJSON(`https://api.github.com/search/users?q=${query}`)),\n        tap(this.hideLoading),\n      );\n    // subscribe date to ui rendering\n    this.user$.subscribe(v => {\n      this.setState({\n        userList: v.items.length > 0 ? this.userListItem(v.items) : this.userNoItem()\n      }, (e) => {\n        \n      })\n    });\n    // reset\n    reset$ = keyup$\n      .pipe(\n        filter((query: string) => query.trim().length === 0),\n        tap(this.hideLoading),\n      );\n  }\n\n  componentWillUnmount() {\n    user$.unsubscribe();\n  }\n\n  userListItem = (items) => items.map(user => (\n    <ListItem alignItems='flex-start'>\n      <ListItemAvatar>\n        <Avatar alt='Remy Sharp' src={user.avatar_url} />\n      </ListItemAvatar>\n      <ListItemText primary={user.login}/>\n    </ListItem>\n  ));\n\n  userNoItem = () => (\n    <ListItem alignItems='center'>\n      <ListItemText primary='No User'/>\n    </ListItem>\n  );\n\n  showLoading = () => {\n    this.setState({\n      isLoading: true\n    })\n  };\n\n  hideLoading = () => {\n    this.setState({\n      isLoading: false\n    })\n  };\n\n  render() {\n    const classes = styles(this.props.pageContext.theme);\n\n    return (\n      <Paper style={classes.root} elevation={1}>\n        <Grid container>\n          <Grid item xs={12} style={classes.search}>\n            <InputBase\n              inputRef={this.searchRef}\n              style={classes.input}\n              placeholder='Search Github User Profile'\n            />\n            <IconButton style={classes.iconButton} aria-label='Search'>\n              <SearchIcon />\n            </IconButton>\n          </Grid>\n          <Grid item xs={12}>\n            <List style={classes.list}>\n              {this.state.isLoading\n                ? <CircularProgress style={classes.progress}/>\n                : this.state.userList\n              }\n            </List>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AA/BA;AAAA;AACA;AAmCA;;;;;;;;;;;;;;;;;AACA;AAIA;AACA;AACA;AAFA;AACA;AA4CA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AACA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;;;;AAlxGA;AACA;AA0GA;;;;A","sourceRoot":""}